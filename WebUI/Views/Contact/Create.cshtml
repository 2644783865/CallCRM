@model Domain.Entities.Client
@{
 ViewBag.Title = "Create";
 var CustomFields = ViewData["CustomFields"] as List<Domain.Entities.ContactFieldType>;
}

<script type="text/javascript">

    $(document).ready(function () {
        $(".add").click(function () {
            $("#" + this.id + "-box").append('<p><label for="' + this.id + '">' + this.id + '</label> <input type="text" name="' + this.id + '[]" value="" /></p>');
        });
    });
   </script>
<h2>Create New Person</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
    <legend>Person</legend>
    <img src="../../Content/images/UserNoName.png" style="float: right; margin: 20px 5px;" />
        <div class="editor-label">
            Stage
        </div>
        <div class="editor-field">
            @Html.DropDownList("ContactStageID", String.Empty)
            @Html.ValidationMessageFor(model => model.ContactStageID)
        </div>

        <div class="editor-label">
            Company
        </div>
        <div class="editor-field">
            @Html.DropDownList("CompanyID", String.Empty)
            @Html.ValidationMessageFor(model => model.CompanyID)
        </div>

        <div class="editor-label">
            Assigned to
        </div>
        <div class="editor-field">
            @Html.DropDownList("EmployeeID", String.Empty)
            @Html.ValidationMessageFor(model => model.EmployeeID)
        </div>

        <div class="editor-label">
           First Name
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
          Last Name
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
           Gender
        </div>
        <div class="editor-field">
             @Html.DropDownListFor(model => model.Gender,  new SelectList(
                  new List<Object>{ 
                       new { value = "unspecified" , text = "unspecified"  },
                       new { value = "male" , text = "Male" },
                       new { value = "female" , text = "Female"}
                    },
                  "value",
                  "text"))
            @Html.ValidationMessageFor(model => model.Gender)
        </div>

        <div class="editor-label">
            Birth date
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BirthDate)
            @Html.ValidationMessageFor(model => model.BirthDate)
        </div>

        <div class="editor-label">
            Position
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Position)
            @Html.ValidationMessageFor(model => model.Position)
        </div>

        <div class="editor-label">
            Phone number
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>



                @foreach (var item in CustomFields) {
                <div class="editor-label">
            <b>@item.Name</b>
        </div>
         <div id="@item.Name-box"><a class="add" id="@item.Name" style="background: url('../../Content/images/plus_field.png')  repeat scroll 0 0 transparent;height:16px;width:16px;display:block;"></a></div>
        }

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
